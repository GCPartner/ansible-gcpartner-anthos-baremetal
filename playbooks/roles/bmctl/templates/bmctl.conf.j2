gcrKeyPath: '{{ home_path }}/bootstrap/gcp_keys/gcr.json'
sshPrivateKeyPath: '{{ home_path }}/.ssh/id_rsa'
gkeConnectAgentServiceAccountKeyPath: '{{ home_path }}/bootstrap/gcp_keys/connect.json'
gkeConnectRegisterServiceAccountKeyPath: '{{ home_path }}/bootstrap/gcp_keys/register.json'
cloudOperationsServiceAccountKeyPath: '{{ home_path }}/bootstrap/gcp_keys/cloud-ops.json'
---
apiVersion: v1
kind: Namespace
metadata:
  name: cluster-{{cluster_name}}
---
apiVersion: baremetal.cluster.gke.io/v1
kind: Cluster
metadata:
  name: {{cluster_name}}
  namespace: cluster-{{cluster_name}}
spec:
  type: hybrid
  profile: default
  anthosBareMetalVersion: 1.10.2
  gkeConnect:
    projectID: {{gcp_project_id}}
  controlPlane:
    nodePoolSpec:
      nodes:
      - address: <Machine 1 IP>
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/20
  loadBalancer:
    mode: bundled
    ports:
      controlPlaneLBPort: 443
    vips:
      controlPlaneVIP: {{cp_vip}}
      ingressVIP: {{ingress_vip}}
    addressPools:
    - name: pool1
      addresses:
      - 'vip_pool_start-ingress_vip'
  clusterOperations:
    projectID: wwt-terraform {{ gcp_project_id }}
    location: us-central1
  storage:
    lvpNodeMounts:
      path: /mnt/localpv-disk
      storageClassName: local-disks
    lvpShare:
      path: /mnt/localpv-share
      storageClassName: local-shared
      numPVUnderSharedPath: 5
  nodeConfig:
    podDensity:
      maxPodsPerNode: 250
    containerRuntime: containerd
  nodeAccess:
    loginUser: '<login user name> user_name' # use terraform to create user_name
---
apiVersion: baremetal.cluster.gke.io/v1
kind: NodePool
metadata:
  name: node-pool-1
  namespace: cluster-{{cluster_name}}
spec:
  clusterName: {{cluster_name}}
  nodes:
  - 'jinja_loop with worker node IPs, index 4 }}' # terraform variable for number of controlPlane nodes and number of worker nodes
  - address: <Machine 2 IP>
  - address: <Machine 3 IP>
